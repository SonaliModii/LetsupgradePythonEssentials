{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Letsupgrade-B7-Day2","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOX7ki2lHsePbCmZkV8OlMI"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"YqjITiRoaTJd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":637},"executionInfo":{"status":"ok","timestamp":1599283625473,"user_tz":-330,"elapsed":2466,"user":{"displayName":"Sonali Modi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgRTyimfqbQfBozaIIdG0mFTOSABdTP9FTd2YTN1A=s64","userId":"14960760544872527372"}},"outputId":"1f5172e4-b42f-43f2-ee18-6cfaef6e615c"},"source":["# Ans1 List and its default functions\n","   #Append function\n","a = [\"bee\", \"moth\"]\n","print(a)\n","a.append(\"ant\")\n","print(a)\n","  #Extend function\n","a = [\"bee\", \"moth\"]\n","print(a)\n","a.extend([\"ant\", \"fly\"])\n","print(a)\n"," \n","   #Pop function\n","a = [\"bee\", \"moth\", \"ant\"]\n","print(a)\n","a.pop()\n","print(a)\n"," \n","  #Count function\n","a = [\"bee\", \"ant\", \"moth\", \"ant\"]\n","print(a.count(\"bee\"))\n","print(a.count(\"ant\"))\n","print(a.count(\"\"))\n"," \n","   #Reverse function\n","a = [3,6,5,2,4,1]\n","a.reverse()\n","print(a)\n"," \n"," \n","#Dictionary and its default functions\n","planet_size = {\"Earth\": 40075, \"Saturn\": 378675, \"Jupiter\": 439264}\n","print(planet_size)\n","print(type(planet_size))\n","  #Copy function\n","car = {\n","  \"brand\": \"Ford\",\n","  \"model\": \"Mustang\",\n","  \"year\": 1964\n","}\n"," \n","x = car.copy()\n"," \n","print(x)\n","   #get function \n","car = {\n","  \"brand\": \"Ford\",\n","  \"model\": \"Mustang\",\n","  \"year\": 1964\n","}\n"," \n","x = car.get(\"model\")\n"," \n","print(x)\n","   #items function\n","car = {\n","  \"brand\": \"Ford\",\n","  \"model\": \"Mustang\",\n","  \"year\": 1964\n","}\n"," \n","x = car.items()\n"," \n","print(x)\n","   #keys function\n","car = {\n","  \"brand\": \"Ford\",\n","  \"model\": \"Mustang\",\n","  \"year\": 1964\n","}\n"," \n","x = car.keys()\n"," \n","print(x)\n","   #values function\n","car = {\n","  \"brand\": \"Ford\",\n","  \"model\": \"Mustang\",\n","  \"year\": 1964\n","}\n"," \n","x = car.values()\n"," \n","print(x)\n"," \n"," \n","#Sets and its default functions\n","   #add function\n","fruits = {\"apple\", \"banana\", \"cherry\"}\n"," \n","fruits.add(\"orange\")\n"," \n","print(fruits)\n","   #issubset function\n","x = {\"a\", \"b\", \"c\"}\n","y = {\"f\", \"e\", \"d\", \"c\", \"b\", \"a\"}\n"," \n","z = x.issubset(y)\n"," \n","print(z)\n","   #issuperset function\n","x = {\"f\", \"e\", \"d\", \"c\", \"b\", \"a\"}\n","y = {\"a\", \"b\", \"c\"}\n"," \n","z = x.issuperset(y)\n"," \n","print(z)\n","   #remove function\n","fruits = {\"apple\", \"banana\", \"cherry\"}\n"," \n","fruits.remove(\"banana\")\n"," \n","print(fruits)\n","   #copy function\n","fruits = {\"apple\", \"banana\", \"cherry\"}\n"," \n","x = fruits.copy()\n"," \n","print(x)\n"," \n"," \n","#Tuple and explore default functions \n","   #length of the tuple\n","tuple1, tuple2 = (123, 'xyz', 'zara'), (456, 'abc')\n","print (\"First tuple length : \", len(tuple1))\n","print (\"Second tuple length : \", len(tuple2))\n","   #Maximum value of tuple\n","tuple1, tuple2 = ('maths', 'che', 'phy', 'bio'), (456, 700, 200)\n","print (\"Max value element : \", max(tuple1))\n","print (\"Max value element : \", max(tuple2))\n","   #Minimum value of tuple\n","tuple1, tuple2 = ('maths', 'che', 'phy', 'bio'), (456, 700, 200)\n","print (\"min value element : \", min(tuple1))\n","print (\"min value element : \", min(tuple2))\n","   #sequence in tuple\n","list1 = ['maths', 'che', 'phy', 'bio']\n","tuple1 = tuple(list1)\n","print (\"tuple elements : \", tuple1)\n","   #count function\n","vowels = ('a', 'e', 'i', 'o', 'i', 'u')\n","count = vowels.count('i')\n","print('The count of i is:', count)\n"," \n"," \n","#String and its default functions \n","   #capitalize function\n","txt = \"hello, and welcome to my world.\"\n"," \n","x = txt.capitalize()\n"," \n","print (x)\n","   #casefold function\n","txt = \"Hello, And Welcome To My World!\"\n"," \n","x = txt.casefold()\n"," \n","print(x)\n","   #endswith function \n","txt = \"Hello, welcome to my world.\"\n"," \n","x = txt.endswith(\".\")\n"," \n","print(x)\n","   #find function\n","txt = \"Hello, welcome to my world.\"\n"," \n","x = txt.find(\"welcome\")\n"," \n","print(x)\n","   #format function \n","txt = \"For only {price:.2f} dollars!\"\n","print(txt.format(price = 49))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['bee', 'moth']\n","['bee', 'moth', 'ant']\n","['bee', 'moth']\n","['bee', 'moth', 'ant', 'fly']\n","['bee', 'moth', 'ant']\n","['bee', 'moth']\n","1\n","2\n","0\n","[1, 4, 2, 5, 6, 3]\n","{'Earth': 40075, 'Saturn': 378675, 'Jupiter': 439264}\n","<class 'dict'>\n","{'brand': 'Ford', 'model': 'Mustang', 'year': 1964}\n","Mustang\n","dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 1964)])\n","dict_keys(['brand', 'model', 'year'])\n","dict_values(['Ford', 'Mustang', 1964])\n","{'banana', 'cherry', 'apple', 'orange'}\n","True\n","True\n","{'cherry', 'apple'}\n","{'banana', 'cherry', 'apple'}\n","First tuple length :  3\n","Second tuple length :  2\n","Max value element :  phy\n","Max value element :  700\n","min value element :  bio\n","min value element :  200\n","tuple elements :  ('maths', 'che', 'phy', 'bio')\n","The count of i is: 2\n","Hello, and welcome to my world.\n","hello, and welcome to my world!\n","True\n","7\n","For only 49.00 dollars!\n"],"name":"stdout"}]}]}